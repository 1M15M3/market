akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = remote

    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      nippy = "liu.mars.market.serialization.NippySerializer"
      cheshire = "liu.mars.market.serialization.ChesireSerializer"
    }

    serialization-bindings {
      "liu.mars.market.messages.CreateSequence" = kryo
      "liu.mars.market.messages.DropSequence" = kryo
      "liu.mars.market.messages.ListSequences" = kryo
      "liu.mars.market.messages.NextValue" = kryo
      "clojure.lang.APersistentMap" = cheshire
      "clojure.lang.ISeq" = cheshire
    }

    kryo  {
      type = "graph"

      idstrategy = "incremental"

      buffer-size = 4096
      max-buffer-size = -1
      kryo-custom-serializer-init = "liu.mars.market.serialization.KryoInit"
      kryo-trace = false

    }

  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 25520
    }
  }

}