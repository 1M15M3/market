akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = remote

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      nippy = "liu.mars.market.NippySerializer"
    }

    serialization-bindings {
      "liu.mars.market.messages.CreateSequence" = kryo
      "liu.mars.market.messages.DropSequence" = kryo
      "liu.mars.market.messages.ListSequences" = kryo
      "liu.mars.market.messages.NextValue" = kryo
      "liu.mars.market.messages.LimitAsk" = kryo
      "liu.mars.market.messages.LimitBid" = kryo
      "liu.mars.market.messages.MarketAsk" = kryo
      "liu.mars.market.messages.MarketBid" = kryo
      "liu.mars.market.messages.Cancel" = kryo
      "liu.mars.market.messages.FindOrder" = kryo
      "liu.mars.market.messages.NextOrder" = kryo
      "liu.mars.market.messages.OrderNotFound" = kryo
      "liu.mars.market.messages.OrderNoMore" = kryo
      "com.fasterxml.jackson.databind.node.ObjectNode" = kryo
      "com.fasterxml.jackson.databind.node.ArrayNode" = kryo
      "clojure.lang.PersistentArrayMap" = nippy
      "clojure.lang.PersistentList" = nippy
      "clojure.lang.PersistentVector" = nippy
      "clojure.lang.LazySeq" = nippy
      "clojure.lang.Keyword" = nippy
      "clojure.lang.Symbol" = nippy
      "java.util.ArrayList" = nippy
    }

    kryo {
      type = "graph"

      idstrategy = "incremental"

      buffer-size = 4096
      max-buffer-size = -1
      kryo-custom-serializer-init = "liu.mars.market.KryoInit"
      kryo-trace = true

    }

  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2554
    }
  }

}